pipeline {
    agent any
    
    environment {
    	DOCKER_IMG_NAME = "user-service"
    	DOCKER_TMP_CONTAINER_NAME = "tmp-user-service-container"
    	DOCKER_REPO = 'gogul611'
    	
    }

    stages {

        stage('clean') {
            steps {
                sh 'mvn clean' 
            }
        }
        stage('compile') {
            steps {
            	echo 'compiling source files....'
                sh 'mvn compile' 
            }
        }
        
       /* 
       stage('quality'){
        	steps{
        		sh 'mvn sonar:sonar'
        		}
        	}
        */
        	
        stage('build') {
            steps {
                sh 'mvn package -DskipTests=true' 
            }
        }
        
        stage('dockersize'){
        steps{
        sh "docker build -t ${DOCKER_REPO}/${DOCKER_IMG_NAME}:latest -t ${DOCKER_REPO}/${DOCKER_IMG_NAME}:${env.BUILD_ID} ."
        }}
        
        
        /*
		stage('integration'){
        steps{
        echo 'running the tmp-user-service-container for integration testing....'
        sh 'docker run -dp 7070:9500 --rm --name tmp-user-service-container user-service:latest'
        sleep 30
        sh 'curl -i http://localhost:7070/api/users'
        }}
        */
        
        
        
        stage('docker publish') {
        	steps {
        		withDockerRegistry( [credentialsId : 'docker_creds_gogul', url: '']) {
        		sh "docker push ${DOCKER_REPO}/${DOCKER_IMG_NAME}:latest"
        		sh "docker push ${DOCKER_REPO}/${DOCKER_IMG_NAME}:${env.BUILD_ID}"
        		}
        	}
        }
}

	post{
		always {
			sh 'docker stop tmp-user-service-container'
			sh "docker rmi ${DOCKER_REPO}/${DOCKER_IMG_NAME}:latest ${DOCKER_IMG_NAME}:${env.BUILD_ID}"
			}
		}
}
